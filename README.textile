h2. So f*** EZ

Ok, download the package of thinks and put this on your frame:

	import com.tchatcho.EZflar;//tcha-tcho.com
	import com.transmote.flar.FLARMarkerEvent;		
		private var _ezflar:EZflar;
		private var _symbols:Array = new Array();
			_symbols.push([["EZFLAR.pat", "cube"]]);//0
				_ezflar = new EZflar(_symbols);
				_ezflar.initializer(stage);


h2. A little bit of more

package {
	import com.tchatcho.EZflar;
	import com.transmote.flar.FLARMarkerEvent;		
	
	public class Main extends MovieClip {
		private var _ezflar:EZflar;
		private var _symbols:Array = new Array();
		
		public function Main() {
			 _symbols will take all your markers and models and work with this in couples... ezflar can handle a lot of formats for you, so enjoy  :)   you can also create names for your models to group or to access this models for your names later. Look how to do that in "myoptionalname". The markers will be access by your numbers, so remember that: begin with 0
			<pre>_symbols.push([["EZFLAR0.pat", "swffilename.swf"],["myoptionalname"]]);//0
			_symbols.push([["EZFLAR1.pat", "flvfilename.flv"]]);//1
			_symbols.push([["EZFLAR2.pat", "daefilename.dae", "OPTIONALtexture.jpg"]]);//2
			_symbols.push([["EZFLAR3.pat", "md2filename.md2", "OPTIONALtexture.jpg"]]);//3
			_symbols.push([["EZFLAR4.pat", "picture", "picturename.jpg"]]);//4
			_symbols.push([["EZFLAR5.pat", "cube", "OPTIONALtexture.jpg"]]);//5
			_symbols.push([["EZFLAR6.pat", "wire"]]);//6
			_symbols.push([["EZFLAR7.pat", "empty"]]);//7
			</pre>
			
				//now its time to build our AR
				//optionally you can give: size, framerate and etc.
				_ezflar = new EZflar(_symbols);
				
				//lets begin! you can put your AR in any DisplayObject, like MovieClip or in this case "stage"
				//if your resources folder is in other place than your swf folder then you can give this
				//path in another argument in a string
				_ezflar.initializer(stage);
				
				//when ezflar dont find a camera he gonna show a message  :)
				//you can customize this message for your language and etc.
				//the second color is the font color, the last is the background
				_ezflar.customizeNoCam("Precisamos de uma webcam", 0xFFFFFF, 0xCCCCCC);
				
				//checkout how your software are responding your changes with a framerate
				_ezflar.viewFrameRate();
				
				//is a little anoying to play with AR with the webcam going to the wrong way
				//you can mirror the image, and demirror when you want
				_ezflar.mirror();
				
				//this will make somethink when your app start
				_ezflar.onStarted(function():void {
					trace("hey! im alive!");
					
					//you can work with more than one model for marker!!
					//ez like that to add more thinks to some marker
					_ezflar.addModelTo([1,"wire"]);//1 is the number of the _symbols remember?
					_ezflar.addModelTo([0,"cube", "OPTIONALtexture.jpg"], ["thecube"]);//here you can give names too
					});
					
				//and you have methods ready to work when markers are showed to the cam
				_ezflar.onAdded(function(marker:FLARMarkerEvent):void {
					//hey! remember the names you gave?? you can pick models and change it!
					_ezflar.getObject(0,"myoptionalname").rotationX = 90;
					_ezflar.getObject(0,"thecube").rotationZ = 270;
					_ezflar.getObject(3);//if you dont have a name he gonna take all without a name :P
					});
					
				_ezflar.onUpdated(function(marker:FLARMarkerEvent):void {
					//he returns this marker that you can use to look where the markers are and etc.
					trace("["+ marker.marker.patternId+"]>>" +
						  "X:" + marker.x() + " || " +
						  "Y:" + marker.y() + " || " +
						  "Z:" + marker.z() + " || " +
						  "RX:" + marker.rotationX() + " || " +
						  "RY:" + marker.rotationY() + " || " +
						  "RZ:" + marker.rotationZ() + " || "
					);
					});
					
				_ezflar.onRemoved(function(marker:FLARMarkerEvent):void {
					//play around with ezflar... we are in beta now and a lot of work to do.. pls help us :)
					});
		}
	}
}
